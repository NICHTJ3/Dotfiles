# Set prefix to space.
unbind C-b
set -g prefix C-a
set -g prefix2 C-\\

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
   | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$' \
   || vim-tmux-navigator-is-vim.sh #{pane_tty}"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# vim like visual mode bindings.
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T copy-mode-vi "C-h" select-pane -L
bind-key -T copy-mode-vi "C-j" select-pane -D
bind-key -T copy-mode-vi "C-k" select-pane -U
bind-key -T copy-mode-vi "C-l" select-pane -R
bind-key -T copy-mode-vi "C-\\" select-pane -l


# Bindings:
# - to see current bindings:
#   list-keys -t {vi,emacs}-{edit,choice,copy}

# Open new/split panes with the path of the current pane.
unbind c
bind c new-window -c "#{pane_current_path}"
unbind '|'
bind '|' split-window -h -c "#{pane_current_path}"
unbind '"'
bind '"' split-window -v -c "#{pane_current_path}"

# Random stuff.
setw -g xterm-keys on
set -g history-limit 262144
set -g default-terminal "${TERM}"
set -ga terminal-overrides ",xterm-256color:Tc" # Proper nvim/tmux/base16 colors

# Bingings I like.
bind s choose-tree -GNsZ #Session list with no preview
bind-key x kill-pane # kill pane without accept popup

# Resize panes (mouse also works).
unbind Left
bind -r Left resize-pane -L 5
unbind Right
bind -r Right resize-pane -R 5
unbind Down
bind -r Down resize-pane -D 5
unbind Up
bind -r Up resize-pane -U 5

# Fast toggle last window (normally prefix-l).
bind ^\  last-window
bind ^\\  last-window

set -w -g window-status-current-style bg=green,fg=black # Highlight active window.

set -g status-position bottom # or top
set -g status-interval 60 # Default is 15.
set -g status-left-length 40

## Catppuccin prompt
set -g @catppuccin_flavor "macchiato"
set -g @catppuccin_window_status_style "basic"
set -g @catppuccin_status_background "none"
set -g @catppuccin_window_current_text " #{window_name}"
set -g @catppuccin_window_text " #{window_name}"
set -g @catppuccin_window_flags "icon"
# Don't show icons for last window and current window
set -g @catppuccin_window_flags_icon_last "" # -
set -g @catppuccin_window_flags_icon_current "" # *
# Remove trailing spaces from window names
set -g @catppuccin_window_flags_icon_format "##{?window_activity_flag,#{E:@catppuccin_window_flags_icon_activity},}##{?window_bell_flag,#{E:@catppuccin_window_flags_icon_bell},}##{?window_silence_flag,#{E:@catppuccin_window_flags_icon_silent},}##{?window_active,#{E:@catppuccin_window_flags_icon_current},}##{?window_last_flag,#{E:@catppuccin_window_flags_icon_last},}##{?window_marked_flag,#{E:@catppuccin_window_flags_icon_mark},}##{?window_zoomed_flag,#{E:@catppuccin_window_flags_icon_zoom},}"


# Load the Catppuccin
run ~/.tmux/plugins/tmux/catppuccin.tmux

# Make the status line pretty and add some modules
set -g status-right-length 100
set -g status-left-length 100
set -g status-left ""
set -g status-right "#{E:@catppuccin_status_application}"
set -ag status-right "#{E:@catppuccin_status_session}"

# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set -g renumber-windows on

# Mouse can be used to select panes, select windows (by clicking on the status
# bar), resize panes. For default bindings see `tmux list-keys` and `tmux
# list-keys -t vi-copy`.
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column breathing room
# (default looks to be about 79).
set -w -g main-pane-width 85

# Start window and pane numbering at 1, (0 is too hard to reach).
set -g base-index 1
set -g pane-base-index 1

# Don't wait for an escape sequence after seeing the prefix
set -s escape-time 0

# Dynamically update iTerm tab and window titles.
set -g set-titles on

# Needed as on tmux 1.9 and up (defaults to off).
# Added in tmux commit c7a121cfc0137c907b7bfb.
set -g focus-events on

# Dont change tmux's window titles automaticaly
set-option -g status-interval 5
set -w -g automatic-rename on

# Stay in tmux copy mode after drag
set -g @yank_action 'copy-pipe' # or 'copy-pipe-and-cancel' for the default

# #T      = standard window title (last command, see ~/.bash_profile)
# #h      = short hostname
# #S      = session name
# #W      = tmux window name
#
# (Would love to include #(pwd) here as well, but that would only print the
# current working directory relative to the session -- ie. always the starting
# cwd -- which is not very interesting).
set -g set-titles-string "#T : #h > #S > #W"

# Show bells in window titles.
set -g window-status-bell-style fg=red,bold,underscore

# Plugins only from here on!!
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'wfxr/tmux-fzf-url'
set -g @plugin 'catppuccin/tmux#v2.1.3'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

