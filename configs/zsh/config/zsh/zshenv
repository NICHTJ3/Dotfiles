# ZSHENV
#
#
##################
# PATH
##################
# Add bin and subdirs to path
if [ -d"$HOME/bin" ];then
    PATH="$PATH:$(du -L "$HOME/bin/" | cut -f2 | tr '\n' ':' | sed 's/:*$//')"
fi

export DOTNET_ROOT=$HOME/.dotnet

# Conditional PATH additions
for path_candidate in \
    $DOTNET_ROOT\
    $HOME/go/bin\
    $HOME/.deno/bin\
    $HOME/.fnm\
    $HOME/.gem/bin\
    $HOME/.local/bin\
    $HOME/.poetry/bin\
    $HOME/.local/share/npm/bin\
    $HOME/.local/share/cargo/bin\
    /usr/local/opt/sqlite/bin
do
    if [ -d ${path_candidate} ]; then
        export PATH="${PATH}:${path_candidate}"
    fi
done

##################
# Enviroment variables
##################
[[ ! -z "$IS_WSL" || ! -z "$WSL_DISTRO_NAME" ]] && WSL_ACTIVE=1

if [[ $WSL_ACTIVE ]]; then
    export BROWSER="wslview"
elif [[ "$(expr ${$(uname -s)[1,5]})" == "Linux" ]]; then
    export BROWSER="firefox-developer-edition"
fi

export EDITOR="nvim"
export GEM_HOME="$HOME/.gem"
export BASE16_SHELL="$HOME/.config/base16-shell/"
export DISABLE_LS_COLORS=true
export TERM=xterm-256color
# Move the zsh history file
export HISTFILE="${XDG_CACHE_HOME:-$HOME/.cache}/zsh_history"
# }}}

##################
# Aliases
##################
if [[ $WSL_ACTIVE  ]];then
    # Windows
    alias open='wslview'
elif [[ "$(expr ${$(uname -s)[1,5]})" == "Linux" ]]; then
    # Linux
    alias open='xdg-open'
fi

# Shared
alias sudo='sudo ' #Allow sudo to use aliases
alias :q='exit'
alias e='open'
alias ls='lsd'
alias gp='git push'
alias gs='git status'
alias gc='git commit'
alias gcm='git commit -m'
alias grmi='git rm -r --cached .; git add -A'
alias cleanMem='sudo sh -c "sync; echo 3 > /proc/sys/vm/drop_caches"'
alias vim='nvim'
alias vi='nvim'
alias :e='nvim'
if type "tmux-manager" > /dev/null; then
    alias tmux='tmux-manager'
fi
alias :q!='test -n "$TMUX" && \tmux kill-session'
alias :qa='test -n "$TMUX" && \tmux kill-window'
alias :sp='test -n "$TMUX" && \tmux split-window'
alias :vs='test -n "$TMUX" && \tmux split-window -h'
alias tmux-kill-and-set-host='\tmux kill-session -a;\tmux rename-session $HOST'
alias docker-clean='docker system prune -a'
alias mapDavidDrive='sudo mount -t cifs //desktop-dm7vasd/hosteddata $HOME/david -o user=op-vr'
alias cl='clear'
alias lear='clear'
alias rmNodeModules="find . -name 'node_modules' -type d -prune -print -exec rm -rf '{}' \;"
alias dots="vi --cmd 'let g:startify_disable_at_vimenter = 1' +Dots"
alias diary="nvim --cmd 'let g:startify_disable_at_vimenter = 1' +VimwikiMakeDiaryNote"
alias todo="nvim --cmd 'let g:startify_disable_at_vimenter = 1' +VimwikiIndex"

# Rustup env
. "$HOME/.cargo/env"




find-up () {
    path=$(pwd)
    while [[ "$path" != "" && ! -e "$path/$1" ]]; do
        path=${path%/*}
    done
    echo "$path"
}

fnm_alias_version(){
    echo $(fnm list | grep $1|  cut -d' ' -f2)
}

read_nvmrc(){
    nvm_path=$(find-up .nvmrc | tr -d '[:space:]')

    # If there are no .nvmrc file, use the default fnm version
    if [[ ! $nvm_path = *[^[:space:]]* ]]; then

        declare default_version;
        default_version=$(fnm_alias_version default);

        # If there is no default version, set it to `node`
        # This will use the latest lts
        if [[ -z "$default_version" ]]; then
            fnm install lts-latest;
            default_version=$(fnm_alias_version default);
        fi

        # If the current version is not the default version, set it to use the default version
        if [[ $(fnm current) != "$default_version" ]]; then
            fnm use default;
        fi

        elif [[ -s "$nvm_path/.nvmrc" && -r "$nvm_path/.nvmrc" ]]; then
        declare nvm_version
        nvm_version=$(<"$nvm_path/.nvmrc")

        # Remove the `v` suffix if it exists in the .nvmrc file
        if [[ $nvm_version == v* ]]; then
            nvm_version=$(echo "$nvm_version" | sed s/v//)
        fi

        if [[ $(fnm current) != "$nvm_version" ]]; then
            fnm use "$nvm_path/.nvmrc";
        fi
    fi
}

cdnvmrc () {
  cd "$@"
  read_nvmrc
}
alias cd="cdnvmrc"
