# ZSHENV
#
#
##################
# PATH
##################
# Add bin and subdirs to path
if [ -d"$HOME/bin" ];then
    PATH="$PATH:$(du -L "$HOME/bin/" | cut -f2 | tr '\n' ':' | sed 's/:*$//')"
fi

export DOTNET_ROOT=$HOME/.dotnet
export BUN_INSTALL="$HOME/.bun"

# Conditional PATH additions
for path_candidate in \
    $BUN_INSTALL/bin\
    $DOTNET_ROOT\
    $HOME/.deno/bin\
    $HOME/.fnm\
    $HOME/.gem/bin\
    $HOME/.local/bin\
    $HOME/.local/share/cargo/bin\
    $HOME/.local/share/npm/bin\
    $HOME/.poetry/bin\
    $HOME/Library/pnpm\
    $HOME/go/bin\
    /usr/local/opt/sqlite/bin
do
    [[ -d ${path_candidate} ]] && export PATH="${PATH}:${path_candidate}"
done

##################
# Enviroment variables
##################
[[ ! -z "$IS_WSL" || ! -z "$WSL_DISTRO_NAME" ]] && WSL_ACTIVE=1

if [[ $WSL_ACTIVE ]]; then
    export BROWSER="wslview"
elif [[ "$(expr ${$(uname -s)[1,5]})" == "Linux" ]]; then
    export BROWSER="firefox-developer-edition"
fi

export EDITOR="nvim"
export GEM_HOME="$HOME/.gem"
export BASE16_SHELL="$HOME/.config/base16-shell/"
export DISABLE_LS_COLORS=true
export TERM=xterm-256color
# Move the zsh history file
export HISTFILE="${XDG_CACHE_HOME:-$HOME/.cache}/zsh_history"
# }}}

##################
# Aliases
##################
if [[ $WSL_ACTIVE  ]];then
    # Windows
    alias open='wslview'
elif [[ "$(expr ${$(uname -s)[1,5]})" == "Linux" ]]; then
    # Linux
    alias open='xdg-open'
fi

# Shared
alias sudo='sudo ' #Allow sudo to use aliases
alias :q='exit'
alias e='open'
alias ls='lsd'
alias gp='git push'
alias gs='git status'
alias gc='git commit'
alias gcm='git commit -m'
alias grmi='git rm -r --cached .; git add -A'
alias cleanMem='sudo sh -c "sync; echo 3 > /proc/sys/vm/drop_caches"'
alias vim='nvim'
alias vi='nvim'
alias :e='nvim'
if type "tmux-manager" > /dev/null; then
    alias tmux='tmux-manager'
fi
alias :qa='test -n "$TMUX" && \tmux kill-window'
alias :sp='test -n "$TMUX" && \tmux split-window'
alias :vs='test -n "$TMUX" && \tmux split-window -h'
alias :q!='test -n "$TMUX" && \tmux kill-session'
alias tmux-kill-and-set-host='\tmux kill-session -a;\tmux rename-session $HOST'
alias docker-clean='docker system prune -a'
alias cl='clear'
alias lear='clear'
alias rmNodeModules="find . -name 'node_modules' -type d -prune -print -exec rm -rf '{}' \;"
alias devx="cd ~/Documents/work/dev-content"
alias nvm="fnm"
alias jira-task="jira issue create --template ~/.config/.jira/templates/task.tmpl"

# Rustup env
[[ -s $HOME/.cargo/env ]] && source "$HOME/.cargo/env"

# Go version manager
[[ -s "$HOME/.gvm/scripts/gvm" ]] && source "$HOME/.gvm/scripts/gvm"

# Iterm shell integration
[[ -s "${HOME}/.iterm2_shell_integration.zsh" ]] && source "${HOME}/.iterm2_shell_integration.zsh"

# Use fnm on cd
if command -v fnm 1>/dev/null 2>&1; then
    eval "$(fnm env --use-on-cd)"
fi

# pyenv
if command -v pyenv 1>/dev/null 2>&1; then
    eval "$(pyenv init -)"
fi

fnm_upgrade () {
    fnm exec --using=$1 npm ls --global --json \
        | jq -r '.dependencies | to_entries[] | .key+"@"+.value.version' \
        | xargs npm i -g
}

terraform() {
    if [[ "$1" == "apply" ]]; then
        echo "Running 'terraform apply' is not allowed locally because of the terraform alias you have setup"
    else
        command terraform "$@"
    fi
}
